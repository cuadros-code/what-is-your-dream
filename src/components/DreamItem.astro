---
interface Props {
  description: string;
  info: string;
  position: {
    desktop: {
      top: number;
      left: number;
    };
  };
}

const { description, info, position} = Astro.props;
const ramdomDelay = Math.random();
---

<div 
  class="dream-item"
  style={`
    --delay: ${ramdomDelay * 1.2};
    top: ${position.desktop.top};
    left: ${position.desktop.left};
  `}
>
  <p class="description">{description}</p>
  <p class="info">{info}</p>
</div>

<style>
  .dream-item {
    background: white;
    padding: 16px;
    border-radius: 16px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    max-width: 350px;
    min-width: 340px;
    position: absolute;
    transition: all 0.2s ease-in-out;
    animation: animation-bounce 3s ease-in-out infinite, feid-in 0.3s ease-out forwards;
    animation-delay: calc(var(--delay) * 1.5s), 0s;
  }

  @keyframes feid-in {
    0% {
      opacity: 0;
    }
    100% {
      opacity: 1;
    }
  }

  @keyframes animation-bounce {
    0% {
      transform: translateY(0) translateX(0px);
    }
    50% {
      transform: translateY(-5px) translateX(10px);
    }
    100% {
      transform: translateY(0) translateX(0px);
    }
  }
  

  p {
    padding: 5px 0px;
    margin: 0px;
  }

  .description {
    font-size: 17px;
    font-weight: 500;
    color: #000000;
  }

  .info {
    font-size: 16px;
    color: #323943c3;
    font-weight: 500;
  }
</style>